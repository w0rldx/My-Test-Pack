{
  blocks: {
     # Variants will imitate the properties of their background blocks,
     # such as the ability to fall like sand or sustain leaves.
    bgImitation: true
    enableFurnaceRecipes: true
     # Vanilla ore variants will not be generated in the presence of any
     # mods listed here.
    disableVanillaVariantsIf: []
     # Whether ore variants will drop instead of original counterparts.
    variantsDrop: false
     # Whether ore variants will drop when using silk touch.
    variantsDropWithSilkTouch: true
     # Whether to inject custom variants into existing advancements.
    enableAdvancements: true
     # Whether to allow silverfish to enter into any infested variants.
    mapInfestedVariants: true
  }
  denseOres: {
     # Adds a dense variant of every ore. Drops 1-3 x each original drop.
    enabled: false
     # The 0-1 chance that dense ores will spawn instead of regular variants.
     # Range: 0.0 ~ 1.0
    chance: 0.09
     # The number of items to yield when smelting dense ores.
     # Range: > 0
    smeltingMultiplier: 2
     # The maximum multiple of items to drop when mining dense ores.
     # Range: > 1
    dropMultiplier: 3
     # The minimum multiple of items to drop when mining dense ores.
     # Range: > 1
    dropMultiplierMin: 1
     # If true, dense variants drop a random number between 1 and multiplier.
    randomDropCount: true
  }
  blockRegistry: {
     #   You can use this registry to add as many new ore types as you like using any
     # background block at all. Block models, textures, world generation, and other
     # properties are handled dynamically. These blocks will only spawn in whichever
     # block or block state is listed as the background block. The ores retain a mixture
     # of their original properties + those of their background.
     #   The basic syntax is like this: "<ore> <background>." For example, to spawn
     # coal ore inside of sand, you would type "coal_ore sand." Alternatively, you
     # can list out any number of ore blocks inside of a new or existing PropertyGroup
     # below and use its name in the place of "<ore>." Likewise, "<background>" can
     # be replaced with the name of a BlockGroup, as registered below.
     #   Some block and property groups have special names. Those are "all" and
     # "default." Using "all" in the place of either will gather all of the respective
     # entries from below and add them to the list dynamically. Using "default" in the
     # place of either will gather all of the entries that are listed *by default*.
     #   Any block listed in the place of "<ore>" must be registered using a preset
     # located at "./config/osv/ores/." You can add new presets there or modify existing
     # presets to customize their properties. In the future, it will be possible to
     # generate these presets dynamically, but they must be created manually for now.
    values: [
      default default
    ]
     # Whether to test the block registry for duplicate combinations.
    testForDuplicates: true
     # The arrays listed in these categories are dynamic. You may create
     # new lists here in order to conveniently reference them above.
    blockGroups: {
      minecraft: [
        stone
        andesite
        diorite
        granite
      ]
      create: [
        create:dolomite
        create:gabbro
        create:limestone
        create:scoria
        create:weathered_limestone
      ]
      quark: [
        quark:jasper
        quark:limestone
        quark:marble
        quark:slate
      ]
    }
    propertyGroups: {
      minecraft: [
        coal_ore
        diamond_ore
        emerald_ore
        gold_ore
        iron_ore
        lapis_ore
        redstone_ore
      ]
      create: [
        create_copper_ore
        create_zinc_ore
      ]
      simpleores: [
        simpleores_tin_ore
        simpleores_mythril_ore
        simpleores_copper_ore
        simpleores_adamantium_ore
      ]
      iceandfire: [
        iceandfire_amethyst_ore
        iceandfire_copper_ore
        iceandfire_sapphire_ore
        iceandfire_silver_ore
      ]
    }
  }
  modSupport: {
    minecraft: true
    create: true
    simpleores: true
    quark: true
    iceandfire: true
  }
  worldGen: {
     # Whether ores should spawn according to specific biomes vs. anywhere.
    biomeSpecific: true
     # Whether vanilla spawning of ores should be blocked.
    enableVanillaOres: false
     # Whether vanilla spawning of stone variants should be blocked.
    enableVanillaStone: false
     # Whether to spawn custom ore variants.
    enableOSVOres: true
     # Whether to spawn stone types with custom variables.
    enableOSVStone: true
     # Will automatically defer ore generation by one stage
     # in the presence of any of these mods. This is needed
     # to fully support Quark at the moment.
    deferOresWhen: [
      quark
    ]
  }
}